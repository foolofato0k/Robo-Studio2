import cv2 as cv
import numpy as np

def detectFaceEdges(img):
    img = cv.cvtColor(img, cv.COLOR_BGR2GRAY) # convert to grayscale for processing

    # FACE DETECTION ______________________
    # Detect Face
    face_cascade = cv.CascadeClassifier('haarcascade_frontalface_default.xml')
    faces = face_cascade.detectMultiScale(img, 1.3, 5)

    # Get Region of Interest
    roi = img.copy()
    for (x,y,w,h) in faces:
        roi = roi[y:y+h, x:x+w]
    roi = cv.resize(roi, (200, 200)) # for canvas creation - can comment out if needed
    
    # EDGE DETECTION ______________________
    # Add Gussian Blur
    img_blur = cv.GaussianBlur(roi, (3,3), 0)
    # Detect Edges
    edge_img = cv.Canny(image=img_blur, threshold1=20, threshold2=120) # Canny Edge Detection

    return edge_img

def createPoster(img, buffer): # private function
        
        # CREATE POSTER - based on face image shape ___________________________
        w, h = img.shape
        canvas = np.zeros((w*buffer,h*buffer),dtype=np.uint8) # create poster
        cw, ch = canvas.shape

        # Casting the original image into the center of the canvas
        o_w = int(cw/buffer) - int(w/buffer)
        o_h = int(ch/buffer) - int(h/buffer)
        
        canvas[o_w:w+o_w, o_h:h+o_h] = img
        canvas = cv.rectangle(canvas,(o_w,o_h),(w+o_w,h+o_h),color=255,thickness=1)

        # ADD TEXT_______________________________
        font_large = 5 # Scale text relative to canvas size
        font_small = font_large * 0.5  # Smaller text

        wanted_pos = (o_w-50, o_h-10)  # Top part
        dead_or_alive_pos = (o_w-50, ch-50)  # Bottom part
        reward_pos = (o_w+50, ch-10)  # Near the bottom center

        canvas = cv.putText(canvas, 'WANTED', org=wanted_pos, fontFace=cv.FONT_HERSHEY_PLAIN, fontScale=font_large, color=255, thickness=1)
        canvas = cv.putText(canvas, 'DEAD OR ALIVE', org=dead_or_alive_pos, fontFace=cv.FONT_HERSHEY_PLAIN, fontScale=font_small, color=255, thickness=1)
        canvas = cv.putText(canvas, '$10', org=reward_pos, fontFace=cv.FONT_HERSHEY_PLAIN, fontScale=font_small, color=255, thickness=1)

        return canvas

def getSVG(img):
     pass

if __name__ == '__main__':
     
     image = None

     cap = cv.VideoCapture(0)
     if not cap.isOpened():
        print("Cannot open camera")
        exit()
     
     webcam = True
     if webcam:
            while True:
                ret, frame = cap.read()
                if not ret:
                    print("Can't receive frame (stream end?). Exiting ...")
                    break

                cv.imshow('fame', frame)
                if cv.waitKey(1) == ord('s'):
                    image = frame
                    break
            cap.release()
            
     else:
         image = cv.imread('test_images/webcam_img.jpg')
         cap.release()
     
     edges = detectFaceEdges(image)
     poster = createPoster(edges, 2)
     cv.imwrite('test_images/poster.png',poster)

     # Showing Outputs
     cv.imshow('edge image', edges)
     cv.imshow('poster', poster)
     
     cv.waitKey(0)
     cv.destroyAllWindows()